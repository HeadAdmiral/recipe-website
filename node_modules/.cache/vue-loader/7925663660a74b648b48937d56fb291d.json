{"remainingRequest":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\src\\App.vue","mtime":1543535227597},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1543030331000},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Navbar from '@/components/Navbar'\n\nexport default {\n    name: 'App',\n    components: {Navbar},\n    data() {\n        return {\n            //\n        }\n    },\n    methods: {\n        // initDatabase: function () {\n        //\n        //\n        //     const app = firebase.initializeApp(config);\n        //     const settings = {\n        //         timestampsInSnapshots: true\n        //     };\n        //     database = firebase.firestore();\n        //     database.settings(settings);\n        //     return database;\n        // },\n        // getID: function() {\n        //     let date = new Date;\n        //     return date.getTime();\n        // },\n        // getKeyword: function() {\n        //     return document.getElementById(\"search\").value;\n        // },\n        save: function(collection, doc, json) {\n            console.log(this.initDatabase());\n            database.collection(collection).doc(doc).set(json)\n            .then(function(){\n                console.log(\"Document successfully written!\");\n            })\n            .catch(function(error) {\n                console.error(\"Error writing document: \", error);\n            });\n        }\n    }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n    <v-app class=\"grey lighten-4\">\r\n        <Navbar/>\r\n        <v-content>\r\n            <router-view></router-view>\r\n        </v-content>\r\n    </v-app>\r\n</template>\r\n\r\n<script>\r\n    import Navbar from '@/components/Navbar'\r\n\r\n    export default {\r\n        name: 'App',\r\n        components: {Navbar},\r\n        data() {\r\n            return {\r\n                //\r\n            }\r\n        },\r\n        methods: {\r\n            // initDatabase: function () {\r\n            //\r\n            //\r\n            //     const app = firebase.initializeApp(config);\r\n            //     const settings = {\r\n            //         timestampsInSnapshots: true\r\n            //     };\r\n            //     database = firebase.firestore();\r\n            //     database.settings(settings);\r\n            //     return database;\r\n            // },\r\n            // getID: function() {\r\n            //     let date = new Date;\r\n            //     return date.getTime();\r\n            // },\r\n            // getKeyword: function() {\r\n            //     return document.getElementById(\"search\").value;\r\n            // },\r\n            save: function(collection, doc, json) {\r\n                console.log(this.initDatabase());\r\n                database.collection(collection).doc(doc).set(json)\r\n                .then(function(){\r\n                    console.log(\"Document successfully written!\");\r\n                })\r\n                .catch(function(error) {\r\n                    console.error(\"Error writing document: \", error);\r\n                });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}