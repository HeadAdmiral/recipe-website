{"remainingRequest":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\src\\views\\Home.vue","mtime":1545332621535},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1543030331000},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alex\\Documents\\GitHub\\recipe-website\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport database from '@/components/firebaseInit.js'\nexport default {\n    data() {\n        let recipes = this.getProjects();\n        return {\n            recipes,\n            rating: 0,\n            opts: {\n                timeout: 3000,\n                chain: '38-38-40-40-37-39-37-39-66-65'\n            },\n            edit: {\n                allow: false,\n                route: '/newrecipe'\n            },\n            dialog: false\n        }\n    },\n    methods: {\n        view: function(id) {\n            this.$router.push('recipe' + '/' + id);\n        },\n        getProjects: function() {\n            let docs = [];\n            // Query database for projects collection\n            database.collection('recipes').orderBy(\"id\", \"desc\").get()\n                .then(function(querySnapshot) {\n                    querySnapshot.forEach(function(doc) {\n                        // Update the stored ID to match the document's ID\n                        docs.push(doc.data())\n                    });\n                });\n            return docs;\n        },\n        getIMG(val) {\n            if (val !== \"\") {\n                return \"https://source.unsplash.com/1600x900/?\" + val;\n            }\n        },\n        updateRating(id, rating, count, score) {\n            // If the id is loaded update the recipe rating\n            if (id) {\n                count += 1;\n                score = score + rating;\n                rating = Number((score / count).toPrecision(3));\n                database.collection('recipes').doc(id).set({\n                    rating: rating,\n                    ratingCount: count,\n                    ratingScore: score\n                }, { merge: true }).then(function () {\n                    document.getElementById(\"rating\").innerText = '(' + rating +')';\n                    console.log('Rating successfully updated with values:' );\n                    console.log('Rating: ' + rating);\n                    console.log('Rating Count: ' + count);\n                    console.log('Rating Score: ' + score);\n                })\n                    .catch(function (error) {\n                        console.error('Error adding document: ', error);\n                        alert('An error has occurred while attempting to update the rating for document ' + id + '.')\n                    });\n            }\n        },\n        setRating(rating) {\n            this.rating = rating;\n        },\n        share(id) {\n            return 'localhost:8080/recipe/' + id;\n        }\n    }\n}\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src\\views","sourcesContent":["<template>\r\n  <div class=\"recipes\">\r\n    <v-layout align-center justify-center column fill-height >\r\n      <div v-for=\"recipe in recipes\" :key=\"recipe.id\">\r\n        <v-flex my-3>\r\n          <v-card width=\"1000\" hover>\r\n            <v-img :src=getIMG(recipe.title) aspect-ratio=\"2.75\" :position=recipe.position></v-img>\r\n            <v-card flat>\r\n              <v-card-title primary-title>\r\n                <div>\r\n                  <h3 class=\"headline mb-0\">{{ recipe.title }}</h3>\r\n                </div>\r\n              </v-card-title>\r\n              <v-card-text>{{ recipe.summary }}</v-card-text>\r\n            </v-card>\r\n            <v-card-actions>\r\n              <v-btn flat @click='dialog = true'>Share</v-btn>\r\n              <v-dialog\r\n                v-model=\"dialog\"\r\n                max-width=\"300\"\r\n              >\r\n                <v-card>\r\n                  <v-card-title class=\"headline\">\r\n                    Share Recipe\r\n                  </v-card-title>\r\n                  <v-card-text>\r\n                    Copy the link below to share with friends:\r\n                  </v-card-text>\r\n                  <v-layout align-center justify-center fill-height>\r\n                    <v-flex md11>\r\n                      <v-text-field solo color=\"accent\" :value=\"share(recipe.id)\"></v-text-field>\r\n                    </v-flex>\r\n                  </v-layout>\r\n                  <v-divider></v-divider>\r\n                  <v-btn flat @click='dialog = false' color=\"accent\">Close</v-btn>\r\n                </v-card>\r\n              </v-dialog>\r\n\r\n              <v-btn flat @click=\"view(recipe.id)\" color=\"accent\">View</v-btn>\r\n              <v-spacer></v-spacer>\r\n              <span class=\"grey--text text--darken-2 caption mr-2\" id=\"rating\">({{ rating }})</span>\r\n              <div class=\"text-xs-center\">\r\n                <v-rating\r\n                        v-model=\"rating\"\r\n                        color=\"yellow darken-3\"\r\n                        background-color=\"grey darken-1\"\r\n                        empty-icon=\"$vuetify.icons.ratingFull\"\r\n                        half-increments\r\n                        small\r\n                        hover\r\n                ></v-rating> <!--:click=\"updateRating(recipe.id, rating, recipe.ratingCount, recipe.ratingScore)\" :created.once=\"setRating(recipe.rating)\"-->\r\n              </div>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-flex>\r\n      </div>\r\n      <v-btn fixed fab right bottom class=\"mx-5 my-4 accent\" router :to=\"edit.route\">\r\n        <v-icon>add</v-icon>\r\n      </v-btn>\r\n    </v-layout>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import database from '@/components/firebaseInit.js'\r\n  export default {\r\n      data() {\r\n          let recipes = this.getProjects();\r\n          return {\r\n              recipes,\r\n              rating: 0,\r\n              opts: {\r\n                  timeout: 3000,\r\n                  chain: '38-38-40-40-37-39-37-39-66-65'\r\n              },\r\n              edit: {\r\n                  allow: false,\r\n                  route: '/newrecipe'\r\n              },\r\n              dialog: false\r\n          }\r\n      },\r\n      methods: {\r\n          view: function(id) {\r\n              this.$router.push('recipe' + '/' + id);\r\n          },\r\n          getProjects: function() {\r\n              let docs = [];\r\n              // Query database for projects collection\r\n              database.collection('recipes').orderBy(\"id\", \"desc\").get()\r\n                  .then(function(querySnapshot) {\r\n                      querySnapshot.forEach(function(doc) {\r\n                          // Update the stored ID to match the document's ID\r\n                          docs.push(doc.data())\r\n                      });\r\n                  });\r\n              return docs;\r\n          },\r\n          getIMG(val) {\r\n              if (val !== \"\") {\r\n                  return \"https://source.unsplash.com/1600x900/?\" + val;\r\n              }\r\n          },\r\n          updateRating(id, rating, count, score) {\r\n              // If the id is loaded update the recipe rating\r\n              if (id) {\r\n                  count += 1;\r\n                  score = score + rating;\r\n                  rating = Number((score / count).toPrecision(3));\r\n                  database.collection('recipes').doc(id).set({\r\n                      rating: rating,\r\n                      ratingCount: count,\r\n                      ratingScore: score\r\n                  }, { merge: true }).then(function () {\r\n                      document.getElementById(\"rating\").innerText = '(' + rating +')';\r\n                      console.log('Rating successfully updated with values:' );\r\n                      console.log('Rating: ' + rating);\r\n                      console.log('Rating Count: ' + count);\r\n                      console.log('Rating Score: ' + score);\r\n                  })\r\n                      .catch(function (error) {\r\n                          console.error('Error adding document: ', error);\r\n                          alert('An error has occurred while attempting to update the rating for document ' + id + '.')\r\n                      });\r\n              }\r\n          },\r\n          setRating(rating) {\r\n              this.rating = rating;\r\n          },\r\n          share(id) {\r\n              return 'localhost:8080/recipe/' + id;\r\n          }\r\n      }\r\n  }\r\n</script>\r\n"]}]}